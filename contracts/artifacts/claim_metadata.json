{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_participants",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_blockAmounts",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_LAND",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "LAND",
				"outputs": [
					{
						"internalType": "contract LandToken",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "blockAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "blocksClaimed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "clearParticipantsList",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"name": "fundOut",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "x",
						"type": "address"
					}
				],
				"name": "getWithdrawAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "x",
						"type": "address"
					}
				],
				"name": "getWithdrawableBlocks",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "isParticipant",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_participants",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_blockAmounts",
						"type": "uint256[]"
					}
				],
				"name": "newParticipantsList",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "participants",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startTime",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/claim.sol": "claim"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@pancakeswap/pancake-swap-lib/contracts/GSN/Context.sol": {
			"keccak256": "0xb5d5654ea9545f91be35321202e885255490867560afbc0c6a55f8b6c4068386",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://ad45743b2fb8322c467618955a89bb82e40b6b730f19c04bf4b0e5eb6d25f39b",
				"dweb:/ipfs/QmR7HdkW9VsAeiSQRrA3LntW36RCv5iczoLkBcQpTc2UYo"
			]
		},
		"@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol": {
			"keccak256": "0xe4099b9c99c22b28d8c1676803e2ff6f34ddc043d1e8631476e8e417c81aa7a3",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://dc140c98056178b731be974f42d523134258162fdf379ef6ed2eeb234fc067df",
				"dweb:/ipfs/QmZNQ3FNYS17E2HjyX4eqk7RYfSJtaG5b47W27xatJjNeo"
			]
		},
		"@pancakeswap/pancake-swap-lib/contracts/math/SafeMath.sol": {
			"keccak256": "0xd4b1686c1494213666dc1423cea64333c3063f334327216d69ca3d59f75a2517",
			"license": "MIT",
			"urls": [
				"bzz-raw://3a3c967dc005a8966266b6052724b7cd04231c6d95abcc03f49e1cbb9ffb890a",
				"dweb:/ipfs/QmRWofmmac5HLRYpMTDQLzmgZyJYeYLB2MY8uTFRKfJuJL"
			]
		},
		"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/BEP20.sol": {
			"keccak256": "0x0442404a56112b52de7e4a64eb0d9fe346add08d122b52e848e43c9f22d707c5",
			"license": "MIT",
			"urls": [
				"bzz-raw://abbecb866acdd459f567efac348a519758c46ca0b53415c484b28b2d28c7b19f",
				"dweb:/ipfs/Qmdo86JSfRcqoMr6Z2H3k1NMZQ6qZCSvSihzCb5Eq7d8DJ"
			]
		},
		"@pancakeswap/pancake-swap-lib/contracts/token/BEP20/IBEP20.sol": {
			"keccak256": "0xcca9eeefad9d3c8a68e426833a5c790d055beebc3f1cefbeac20b096456c9aef",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://61090ac66da4fcf117cb95119cda4c45b5bcf9f8a48203444b0f97b39a9ccbd1",
				"dweb:/ipfs/Qmb1XnfUGdZ7ma31WqhGMaE9mWug1erEUh8xEYvvjZ5v4r"
			]
		},
		"@pancakeswap/pancake-swap-lib/contracts/utils/Address.sol": {
			"keccak256": "0x806c8686fdf1afac78d0828ca7941e5ac30282a358d23cf502ec39893c64d4af",
			"license": "MIT",
			"urls": [
				"bzz-raw://be41cfa7e8aaf4c95e1517007964cef2470abd47ad578293db4cd25434ee77ea",
				"dweb:/ipfs/QmPX9qcHJNv1vA6Nxue8c46wxdXwKdLcUyXxEQ91F93u7a"
			]
		},
		"contracts/LandToken.sol": {
			"keccak256": "0x88de4097d8f3ae649ff9162154031e72c33524417211732aea1fa0b4804f673a",
			"urls": [
				"bzz-raw://de4a5e76ca98b3b2e896f0594155e26d7ac4cde33d735e2b199a790517f4ecf0",
				"dweb:/ipfs/Qmedtc71GRXCx23hbsc2WLTwoV54FZsWaEoNXfjjahxFLq"
			]
		},
		"contracts/claim.sol": {
			"keccak256": "0x8b2c5e21151e6f9876cf97eb6cf095a40cfceea1577c0fdce51ec4a33b636059",
			"urls": [
				"bzz-raw://6759788061e1739f97c10ce7b428f627a3567062f72fec59ae6e46cab4f4c83e",
				"dweb:/ipfs/QmeboxmrVEKy4ycxNUAnBth8wDLqGridTjmg45i3JfyHJc"
			]
		}
	},
	"version": 1
}